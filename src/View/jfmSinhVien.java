/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.sinhVien;
import Model.loadTable;
import static Model.sinhVien.conn;
import static Model.sinhVien.pst;
import static Model.sinhVien.rs;
import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import java.text.ParseException;
import javax.swing.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.regex.Pattern;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
public class jfmSinhVien extends javax.swing.JFrame {
    public static String gt;
    public static String sql ="Select * From SINHVIEN";
    public static String masv; // biến tạm lưu lại MaSV tại dòng có con trỏ chuột click
    public jfmSinhVien() {
        initComponents();
        // nhóm rad Nam và nữ vào 1 radGroup
        btgGioiTinh.add(radNam);
        btgGioiTinh.add(radNu);
        // Gọi hàm đổ dl từ BLL lên bảng jtbSinhVien
        loadTable.loadData(sql, jtbSinhVien);
        loadSinhVien();
    }
    // hàm kiểm tra định dạng email
    public static boolean isEmailValid(String email) 
    { 
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+ 
                            "[a-zA-Z0-9_+&*-]+)*@" + 
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" + 
                            "A-Z]{2,7}$"; 
                              
        Pattern pat = Pattern.compile(emailRegex); 
        if (email == null) 
            return false; 
        return pat.matcher(email).matches(); 
    } 
    // hàm load lại sau khi cập nhật dữ liệu
    public void loadSinhVien()
    {
        loadTable.loadData(sql, jtbSinhVien);
        this.lblTongSV.setText("Tổng số sinh viên: "+this.jtbSinhVien.getRowCount());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGioiTinh = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtHoSV = new javax.swing.JTextField();
        txtTenSV = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbSinhVien = new javax.swing.JTable();
        radNam = new javax.swing.JRadioButton();
        radNu = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        lblTongSV = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sinh viên");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Thông Tin Sinh Viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Mã SV:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Họ SV:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Tên SV:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Ngày Sinh:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Giới Tính:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Email:");

        txtMaSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtHoSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtTenSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jtbSinhVien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbSinhVien.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtbSinhVien.setRowHeight(23);
        jtbSinhVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbSinhVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbSinhVien);
        if (jtbSinhVien.getColumnModel().getColumnCount() > 0) {
            jtbSinhVien.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            jtbSinhVien.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            jtbSinhVien.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            jtbSinhVien.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        radNam.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radNam.setSelected(true);
        radNam.setText("Nam");
        radNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNamActionPerformed(evt);
            }
        });

        radNu.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radNu.setText("Nữ");
        radNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNuActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update (2).png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/remove.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        lblTongSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTongSV.setText("Tổng số sinh viên:");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setText("Xuất PDF");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(txtHoSV, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(24, 24, 24)
                                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(jLabel5)))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel4)
                        .addGap(19, 19, 19)
                        .addComponent(txtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel6)
                        .addGap(33, 33, 33)
                        .addComponent(radNam)
                        .addGap(24, 24, 24)
                        .addComponent(radNu))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblTongSV))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3))
                            .addComponent(txtHoSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel7))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(txtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(radNam))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(radNu)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lblTongSV))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNuActionPerformed

    private void radNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNamActionPerformed

    private boolean isEmailUnique(String email) {
        String sql = "SELECT COUNT(*) FROM SINHVIEN WHERE Email = ?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, email);
            rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) == 0;
            }
        } catch (SQLException e) {
        }
        return false;
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
    if(radNam.isSelected()) {
        gt = "true";
    } else {
        gt = "false";
    }
    String email = txtEmail.getText();
    String hoSV=this.txtHoSV.getText();
    String tenSV= this.txtTenSV.getText();
    
    if(this.txtMaSV.getText().length() == 0 || this.txtHoSV.getText().length() == 0 || 
       this.txtTenSV.getText().length() == 0 || this.jDateChooser1.getDate() == null || 
       this.txtEmail.getText().length() == 0) {
        JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông Báo", JOptionPane.WARNING_MESSAGE);
    } else {
        // Kiểm tra ngày sinh của sinh viên
        int age = kiemTraNgaySinh(this.jDateChooser1.getDate());
        if (age < 18) {
            JOptionPane.showMessageDialog(null, "Sinh viên chưa đủ 18 tuổi", "Thông Báo", JOptionPane.WARNING_MESSAGE);
            return; // Không thực hiện thêm sinh viên nếu không đủ 18 tuổi
        } else if (age > 25) {
            JOptionPane.showMessageDialog(null, "Sinh viên đã quá hạn thời gian học ở trường", "Thông Báo", JOptionPane.WARNING_MESSAGE);
            return; // Không thực hiện thêm sinh viên nếu quá 25 tuổi
        }
        // kiểm tra định dạng email
        if(!isEmailValid(email)){
        JOptionPane.showMessageDialog(null, "Email không đúng định dạng", "Thông Báo", JOptionPane.WARNING_MESSAGE); 
        return;
        }
        if (!isEmailUnique(email)) {
                JOptionPane.showMessageDialog(null, "Email đã tồn tại", "Thông Báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
        // kiểm tra tên
        if(!kiemTraTen(hoSV) || !kiemTraTen(tenSV)){
        JOptionPane.showMessageDialog(null, "Họ và tên chỉ được chứa các chữ cái", "Thông Báo", JOptionPane.WARNING_MESSAGE); 
        return;
        }
        
        // Chuyển đổi đối tượng Date thành chuỗi theo định dạng yyyy-MM-dd
        String ngaySinh = new SimpleDateFormat("yyyy-MM-dd").format(this.jDateChooser1.getDate());
        sinhVien.themSV(this.txtMaSV.getText(), this.txtHoSV.getText(), 
                        this.txtTenSV.getText(), ngaySinh, gt, this.txtEmail.getText());
        loadSinhVien();
    }
    }//GEN-LAST:event_btnThemActionPerformed

    private int kiemTraNgaySinh(Date ngaySinh) {
    // Chuyển đổi ngày sinh từ Date sang LocalDate
    LocalDate ngaySinhLocalDate = ngaySinh.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    // Lấy ngày hiện tại
    LocalDate ngayHienTai = LocalDate.now();

    // Tính số năm giữa ngày sinh và ngày hiện tại
    Period period = Period.between(ngaySinhLocalDate, ngayHienTai);
    int soNam = period.getYears();

    // Trả về số năm
    return soNam;
}
   private boolean kiemTraTen(String name) {
    // Biểu thức chính quy để kiểm tra nếu chuỗi chỉ chứa chữ cái và khoảng trắng
    return name.matches("^[\\p{L} .'-]+$");
}
    
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String hoSV=this.txtHoSV.getText();
        String tenSV= this.txtTenSV.getText();
        
        if(this.txtMaSV.getText().length()==0 || this.txtHoSV.getText().length()==0 || this.txtTenSV.getText().length()==0 || this.jDateChooser1.getDate() == null || this.txtEmail.getText().length()==0)
            JOptionPane.showMessageDialog(null,"Vui lòng nhập đầy đủ thông tin","Thông Báo",1);
        else
        {
            // Lấy ngày hiện tại
            Date currentDate = new Date();
            // Lấy ngày sinh từ jDateChooser1
            Date birthDate = this.jDateChooser1.getDate();
            // Tính tuổi
            int age = currentDate.getYear() - birthDate.getYear();
            if (currentDate.getMonth() < birthDate.getMonth() || 
                (currentDate.getMonth() == birthDate.getMonth() && currentDate.getDate() < birthDate.getDate())) {
                age--;
            }
            // Kiểm tra tuổi
            if(age < 18) {
                JOptionPane.showMessageDialog(null,"Sinh viên chưa đủ 18 tuổi","Thông Báo",1);
                return;
            } else if(age > 25) {
                JOptionPane.showMessageDialog(null,"Sinh viên đã quá hạn thời gian học ở trường","Thông Báo",1);
                return;
            }
            if(!kiemTraTen(hoSV) || !kiemTraTen(tenSV)){
            JOptionPane.showMessageDialog(null, "Họ và tên chỉ được chứa các chữ cái", "Thông Báo", JOptionPane.WARNING_MESSAGE); 
            return;
            }

            if(radNam.isSelected())
            {
                gt="true";
            }
            else
            {
                gt="false";
            }
            String ngaySinh = new SimpleDateFormat("yyyy-MM-dd").format(this.jDateChooser1.getDate());
            sinhVien.suaSV(masv,this.txtMaSV.getText(), this.txtHoSV.getText(),this.txtTenSV.getText(), ngaySinh, gt, this.txtEmail.getText());
            loadSinhVien();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if(this.txtMaSV.getText().length()==0)
            JOptionPane.showMessageDialog(null,"Vui lòng chọn sinh viên cần xóa","Thông Báo",1);
        else
       {
            if(JOptionPane.showConfirmDialog(null,"Bạn có muốn xóa sinh viên "+masv+" không?","Thông Báo",2)==0)
            {
                sinhVien.xoaSV(masv);
            }
            loadSinhVien();
       }
    }//GEN-LAST:event_btnXoaActionPerformed
    
    // Đổ dữ liệu lên textField
    private void jtbSinhVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbSinhVienMouseClicked
        try
    {
        int row = this.jtbSinhVien.getSelectedRow(); // lấy dòng tại con trỏ chuột
        String IDrow = (this.jtbSinhVien.getModel().getValueAt(row, 0)).toString();// Lấy giá trị tại con trỏ chuột theo kiểu string
        String gioiTinh = (this.jtbSinhVien.getModel().getValueAt(row,4)).toString();// Lấy giá trị Giới Tính theo kiểu string
        String sql1 = "select * from SINHVIEN where MaSV=N'"+IDrow+"'";
        ResultSet rs = loadTable.showTextField(sql1);
        // đọc dữ liệu tại dòng "IDrow"
        if(rs.next()) // nếu có dữ liệu
        {
             masv = rs.getString("MaSV");
            this.txtMaSV.setText(rs.getString("MaSV"));
            this.txtHoSV.setText(rs.getString("HoSV"));
            this.txtTenSV.setText(rs.getString("TenSV"));
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("NgaySinh"));
            this.jDateChooser1.setDate(date);
            this.txtEmail.setText(rs.getString("Email"));
            if("true".equals(gioiTinh)) // nếu là Nam
            {
                 radNam.setSelected(Boolean.TRUE);
            }
            else // nếu là Nữ
            {
                 radNu.setSelected(Boolean.TRUE);
            }
        }
    }
    catch(SQLException | ParseException e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
        
    }//GEN-LAST:event_jtbSinhVienMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       jfmMain main = new jfmMain();
        this.setVisible(false);
        main.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//       Choose Location For Saving Excel File 
        MessageFormat header = new MessageFormat("Danh sách sinh viên");
        MessageFormat footer = new MessageFormat("{0,number,integer}");
        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
         set.add(OrientationRequested.PORTRAIT);
         int confirmPrint = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn in?", "Xác nhận in", JOptionPane.YES_NO_OPTION);
         if (confirmPrint == JOptionPane.YES_OPTION) {
        try {
            jtbSinhVien.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, set, true);
            JOptionPane.showMessageDialog(null, "In thành công");
        } catch (HeadlessException | PrinterException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "In không thành công");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Bạn đã hủy lệnh in");
    }           
        } catch (HeadlessException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "In không thành công");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfmSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfmSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfmSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfmSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfmSinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgGioiTinh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbSinhVien;
    private javax.swing.JLabel lblTongSV;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radNu;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoSV;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtTenSV;
    // End of variables declaration//GEN-END:variables
    public JTable getJtbSinhVien() {
        return jtbSinhVien;
    }
    
    
    
}
