/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.loadTable;
import Model.lopHocMon;
import static View.jfmDiem.conn;
import static View.jfmDiem.sql;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author luong
 */
public class jfmLopHoc extends javax.swing.JFrame {

    /**
     * Creates new form jfmLopHoc
     */
    public static String msv;
    public static String mmh;
    public static String sql ="SELECT DISTINCT MaSV, MaMH FROM lopHoc";
    public jfmLopHoc() {
        initComponents();
        loadTable.loadData(sql, jtbLopHoc);
        loadcbMaSV();
        loadcbMaMH();
        loadLopHoc();
        // Đóng cứng trường văn bản jtxtTenSV và jtxtTenMH
        jtxtTenSV.setEditable(false);
        jtxtTenMH.setEditable(false);
    }
    
    public void loadLopHoc() {
        loadTable.loadData(sql, jtbLopHoc);
        this.lblTongLop.setText("Tổng số sinh viên đăng ký môn học: " + getDistinctStudentCount());
    }
    
    private int getDistinctStudentCount() {
        int count = 0;
        String countSql = "SELECT COUNT(DISTINCT MaSV) AS total FROM lopHoc";
        try {
            PreparedStatement pst = conn.prepareStatement(countSql);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                count = rs.getInt("total");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e, "Thông Báo Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        return count;
    }
    
    // load mã sv từ bảng sv vào cbMaSV
    public void loadcbMaSV()
    {
        String sql="select * from SINHVIEN";
        try
        {
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while(rs.next())
            {
                this.cbMaSV.addItem(rs.getString("MaSV"));
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e,"Thông Báo Lỗi",1);
        }
    }
    
    // load mã môn học từ bảng môn học vào cbMaMH
    public void loadcbMaMH()
    {
        String sql="select * from MONHOC";
        try
        {
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while(rs.next())
            {
                this.cbMaMH.addItem(rs.getString("MaMH"));
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e,"Thông Báo Lỗi",1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbMaSV = new javax.swing.JLabel();
        cbMaSV = new javax.swing.JComboBox<>();
        jlbMaMH = new javax.swing.JLabel();
        cbMaMH = new javax.swing.JComboBox<>();
        jlbTenSV = new javax.swing.JLabel();
        jtxtTenSV = new javax.swing.JTextField();
        jlbTenMH = new javax.swing.JLabel();
        jtxtTenMH = new javax.swing.JTextField();
        jlbLopHoc = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnThem1 = new javax.swing.JButton();
        btnDangKi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbLopHoc = new javax.swing.JTable();
        lblTongLop = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlbMaSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlbMaSV.setText("Mã Sinh Viên:");

        cbMaSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cbMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaSVActionPerformed(evt);
            }
        });

        jlbMaMH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlbMaMH.setText("Mã Môn Học:");

        cbMaMH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cbMaMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaMHActionPerformed(evt);
            }
        });

        jlbTenSV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlbTenSV.setText("Tên Sinh Viên:");

        jtxtTenSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtTenSVActionPerformed(evt);
            }
        });

        jlbTenMH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlbTenMH.setText("Tên Môn Học:");

        jlbLopHoc.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlbLopHoc.setText("Lớp Học");

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnThem.setText("Sửa Đăng Kí");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnThem1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancel.png"))); // NOI18N
        btnThem1.setText("Hủy Đăng Kí");
        btnThem1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnDangKi.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnDangKi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/register.png"))); // NOI18N
        btnDangKi.setText("Đăng Kí Môn Học");
        btnDangKi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        jtbLopHoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtbLopHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jtbLopHoc.setRowHeight(23);
        jtbLopHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbLopHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbLopHoc);

        lblTongLop.setText("Tổng số sinh viên đăng kí:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jlbLopHoc))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jlbMaSV)
                        .addGap(13, 13, 13)
                        .addComponent(cbMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jlbTenSV)
                        .addGap(38, 38, 38)
                        .addComponent(jtxtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jlbMaMH)
                        .addGap(16, 16, 16)
                        .addComponent(cbMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jlbTenMH)
                        .addGap(41, 41, 41)
                        .addComponent(jtxtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblTongLop)))
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jlbLopHoc)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbMaSV)
                    .addComponent(cbMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTenSV)
                    .addComponent(jtxtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbMaMH)
                    .addComponent(cbMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTenMH)
                    .addComponent(jtxtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(lblTongLop)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaSVActionPerformed
        String maSV = cbMaSV.getSelectedItem().toString();
        String tenSV = getTenSV(maSV);
        jtxtTenSV.setText(tenSV);
    }//GEN-LAST:event_cbMaSVActionPerformed

    private void cbMaMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaMHActionPerformed
        String maMH = cbMaMH.getSelectedItem().toString();
        String tenMH = getTenMH(maMH);
        jtxtTenMH.setText(tenMH);
    }//GEN-LAST:event_cbMaMHActionPerformed

    private String getTenSV(String maSV) {
    String tenSV = "";
    String sql = "SELECT TenSV FROM SINHVIEN WHERE MaSV = ?";
    try {
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, maSV);
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            tenSV = rs.getString("TenSV");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e, "Thông Báo Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    return tenSV;
}
    
    private String getTenMH(String maMH) {
    String tenMH = "";
    String sql = "SELECT TenMH FROM MONHOC WHERE MaMH = ?";
    try {
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, maMH);
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            tenMH = rs.getString("TenMH");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e, "Thông Báo Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    return tenMH;
}
    
    
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String maSV = this.cbMaSV.getSelectedItem().toString();
        String oldMaMH = mmh;
        String newMaMH = this.cbMaMH.getSelectedItem().toString();
        lopHocMon.suaDangKi(maSV, oldMaMH, newMaMH);
        loadLopHoc();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
            lopHocMon.huyDangKi(this.cbMaSV.getSelectedItem().toString(), this.cbMaMH.getSelectedItem().toString());
            loadLopHoc();
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed
            lopHocMon.dangKiMonHoc(this.cbMaSV.getSelectedItem().toString(), this.cbMaMH.getSelectedItem().toString());
            loadLopHoc();
    }//GEN-LAST:event_btnDangKiActionPerformed

    private void jtxtTenSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTenSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtTenSVActionPerformed

    private void jtbLopHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbLopHocMouseClicked
        try {
        int row = this.jtbLopHoc.getSelectedRow(); // Get the row index at the cursor
        String maSV = (this.jtbLopHoc.getModel().getValueAt(row, 0)).toString(); // Get the MaSV value
        String maMH = (this.jtbLopHoc.getModel().getValueAt(row, 1)).toString(); // Get the MaMH value
        
        String sql = "SELECT * FROM lopHoc WHERE MaSV=? AND MaMH=?";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, maSV);
        pst.setString(2, maMH);
        ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            msv = rs.getString("MaSV");
            mmh = rs.getString("MaMH");
            this.cbMaSV.setSelectedItem(rs.getString("MaSV"));
            this.cbMaMH.setSelectedItem(rs.getString("MaMH"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e, "Thông Báo Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jtbLopHocMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfmLopHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfmLopHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfmLopHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfmLopHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jfmLopHoc lopHoc = new jfmLopHoc();
                lopHoc.setLocationRelativeTo(null);
                lopHoc.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JComboBox<String> cbMaMH;
    private javax.swing.JComboBox<String> cbMaSV;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbLopHoc;
    private javax.swing.JLabel jlbMaMH;
    private javax.swing.JLabel jlbMaSV;
    private javax.swing.JLabel jlbTenMH;
    private javax.swing.JLabel jlbTenSV;
    private javax.swing.JTable jtbLopHoc;
    private javax.swing.JTextField jtxtTenMH;
    private javax.swing.JTextField jtxtTenSV;
    private javax.swing.JLabel lblTongLop;
    // End of variables declaration//GEN-END:variables
}
